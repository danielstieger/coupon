<!--


 Build.xml for tomcat environment, vaadin applications
 daniel stieger, spring 2015, brighton

 
 
 
 set JAVA_HOME=c:\javaexe\MPS30\jre
 set PATH=%PATH%;c:\javaexe\ant_MPS25\bin;c:\PROGRA~2\WIXTOO~1.7\bin
 
 
 export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home
 export PATH=$PATH:/Users/danielstieger/javaexe/ant/bin
 export PATH=$PATH:/Users/danielstieger/javaexe/maven/bin
 
 
-->
 
<project name="VaadinApplication" default="default">      

  <!-- **** app specific definitions **************************************************************** -->
  <property name="appBuildVersion"      value="BUILD V0.0.0" />
  <property name="appName"              value="Coupon" />
  <property name="appMainclass"         value="at.hafina.coupon.app.Coupon" />
  <property name="appConfiguration"     value="at/hafina/coupon/app/VaadinConfig.xml" /> 
  <property name="myHome"               value="/Users/danielstieger" />
  <property name="projectHome"          value="${myHome}/javaware/coupon" />

  <!-- **** build specific definitions ************************************************************** -->
  <property name="mpsHomeDir"            value="${myHome}/javaexe/MPS335" /> 
  <property name="mowarePluginHomeDir"   value="${myHome}/javaexe/MoPluginFake" />
  <property name="tomcatHomeDir"         value="${myHome}/stuff/green" />
      

 
  <!-- **** solutions to incorporate in this build ************************************************** -->
  <property name="solutionSimpleGen"     value="${projectHome}/solutions/at.hafina.coupon/classes_gen" />

  <echo>
    Run by ${user.name} on Java Home : ${java.home}
    Building VERSION ${appBuildVersion} of ${appMainclass}
    
  </echo>

  <target name="default">

    <mkdir dir="work"/>
    <mkdir dir="work/WEB-INF/lib"/>
    <copy todir="work/WEB-INF/lib">
	  <fileset dir="${mowarePluginHomeDir}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.sandbox.jar" />
	  <fileset dir="${mowarePluginHomeDir}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.manmap.solution.jar" />
	  <fileset dir="${mowarePluginHomeDir}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.dataux.runtime.jar" />
	  <fileset dir="${mowarePluginHomeDir}/languages/MoWareLangAndSolutions/" includes="org.modellwerkstatt.vaadinforms.jar" />
	  <fileset dir="${mowarePluginHomeDir}/languages/MoWareLangAndSolutions/" includes="moware-vaadin-theme-1.0.jar" />
    
      
      <fileset dir="${mowarePluginHomeDir}/jars/basis/" includes="*.jar" />      
      <fileset dir="${mpsHomeDir}/lib/" includes="mps-closures.jar" />
      <fileset dir="${mpsHomeDir}/lib/" includes="mps-collections.jar" />
     
      <fileset dir="${mowarePluginHomeDir}/jars/printing21/" includes="*.jar" />
      <fileset dir="${mowarePluginHomeDir}/jars/zoo/" includes="*.jar" />
      
      <fileset dir="${mowarePluginHomeDir}/jars/vaadinclient/" includes="*.jar" />
    </copy>
    
        
    <mkdir dir="work/WEB-INF/classes"/>
    <copy todir="work/WEB-INF/classes">
      <fileset dir="${solutionSimpleGen}" />
    </copy>
    
    
    <copy file="${mowarePluginHomeDir}/vaadinassembly/artefact/context.xml" tofile="work/WEB-INF/context.xml" filtering="yes" overwrite="yes">
    </copy>
    
    <copy file="${mowarePluginHomeDir}/vaadinassembly/artefact/web.xml" tofile="work/WEB-INF/web.xml" filtering="yes" overwrite="yes">
      <filterchain>
          <tokenfilter>
              <replaceregex pattern="APPLICATION_FQNAME" replace="${appMainclass}"/>
              <replaceregex pattern="APPLICATION_CONFIG" replace="${appConfiguration}"/>
              <replaceregex pattern="APPLICATION_BUILDVERSION" replace="${appBuildVersion}"/>
          </tokenfilter>
      </filterchain>
    </copy>
  
    <mkdir dir="dist"/>  
    <jar destfile="dist/${appName}.war" basedir="work" update="false">
      <manifest>
        <attribute name="Main-Class" value="${appMainclass}" />
        <attribute name="Version" value="${appBuildVersion}" />
      </manifest>
    </jar>

  </target>
  
  <target name="clean" description="Delete old work and dist directories">
	<delete dir="work"/>
        <delete dir="dist"/>
  </target>
  
  <target name="redeploy" depends="default">
  	<copy todir="${tomcatHomeDir}/webapps/${appName}">
  		<fileset dir="work" />
  	</copy>
  </target>
  
</project>
